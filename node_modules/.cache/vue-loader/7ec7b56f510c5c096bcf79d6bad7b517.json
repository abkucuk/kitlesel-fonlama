{"remainingRequest":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-date-picker/cv-date-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-date-picker/cv-date-picker.vue","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cv-date-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-date-picker.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-date-picker","sourcesContent":["<template>\n  <cv-wrapper :tag-type=\"formItem ? 'div' : ''\" :class=\"`cv-date-picker ${carbonPrefix}--form-item`\" :id=\"uid\">\n    <div\n      :data-date-picker=\"['single', 'range'].includes(kind)\"\n      :data-date-picker-type=\"kind\"\n      :class=\"[\n        `${this.carbonPrefix}--date-picker ${this.carbonPrefix}--date-picker--${this.kind}`,\n        {\n          [`${carbonPrefix}--date-picker--simple`]: this.kind === 'short',\n          [`${carbonPrefix}--date-picker--light`]: isLight,\n          'cv-date-pciker': !formItem,\n        },\n      ]\"\n      ref=\"date-picker\"\n      :id=\"formItem ? undefined : uid\"\n    >\n      <div\n        :class=\"{\n          [`${carbonPrefix}--date-picker-container`]: ['single', 'range'].includes(kind),\n          [`${carbonPrefix}--date-picker--nolabel`]: getDateLabel !== undefined,\n        }\"\n        @change=\"onChange\"\n      >\n        <label v-if=\"getDateLabel.length > 0\" :for=\"`${uid}-input-1`\" :class=\"`${carbonPrefix}--label`\">\n          {{ getDateLabel }}\n        </label>\n        <div :class=\"`${carbonPrefix}--date-picker-input__wrapper`\">\n          <input\n            :data-invalid=\"isInvalid\"\n            type=\"text\"\n            :id=\"`${uid}-input-1`\"\n            :class=\"`${carbonPrefix}--date-picker__input`\"\n            :pattern=\"pattern\"\n            :placeholder=\"placeholder\"\n            data-date-picker-input\n            :data-date-picker-input-from=\"kind === 'range'\"\n            ref=\"date\"\n          />\n          <Calendar16\n            v-if=\"['single', 'range'].includes(kind)\"\n            :class=\"`${carbonPrefix}--date-picker__icon`\"\n            data-date-picker-icon\n            @click=\"cal.open()\"\n          />\n        </div>\n        <div :class=\"`${carbonPrefix}--form-requirement`\" v-if=\"isInvalid\">\n          <slot name=\"invalid-message\">{{ invalidMessage || invalidDateMessage }}</slot>\n        </div>\n      </div>\n      <div :class=\"{ [`${carbonPrefix}--date-picker-container`]: kind === 'range' }\" v-if=\"kind === 'range'\">\n        <label v-if=\"getDateEndLabel.length > 0\" :for=\"`${uid}-input-2`\" :class=\"`${carbonPrefix}--label`\">\n          {{ getDateEndLabel }}\n        </label>\n        <div :class=\"`${carbonPrefix}--date-picker-input__wrapper`\">\n          <input\n            type=\"text\"\n            :id=\"`${uid}-input-2`\"\n            :class=\"`${carbonPrefix}--date-picker__input`\"\n            :pattern=\"pattern\"\n            :placeholder=\"placeholder\"\n            data-date-picker-input\n            :data-date-picker-input-to=\"kind === 'range'\"\n            ref=\"todate\"\n          />\n          <Calendar16 :class=\"`${carbonPrefix}--date-picker__icon`\" data-date-picker-icon @click=\"openTodateCal()\" />\n        </div>\n      </div>\n    </div>\n  </cv-wrapper>\n</template>\n\n<script>\nimport Flatpickr from 'flatpickr';\nimport l10n from 'flatpickr/dist/l10n/index';\n// import carbonFlatpickrAppendToPlugin from './plugins/appendToPlugin';\nimport carbonFlatpickrFixEventsPlugin from './plugins/fixEventsPlugin';\nimport carbonFlatpickrRangePlugin from './plugins/rangePlugin';\nimport carbonFlatpickrMonthSelectPlugin from './plugins/monthSelectPlugin';\n\nimport { uidMixin, themeMixin, carbonPrefixMixin } from '../../mixins';\nimport Calendar16 from '@carbon/icons-vue/es/calendar/16';\nimport CvWrapper from '../cv-wrapper/_cv-wrapper';\n\n// Weekdays shorthand for english locale\nl10n.en.weekdays.shorthand.forEach((day, index) => {\n  const currentDay = l10n.en.weekdays.shorthand;\n  if (currentDay[index] === 'Thu' || currentDay[index] === 'Th') {\n    currentDay[index] = 'Th';\n  } else {\n    currentDay[index] = currentDay[index].charAt(0);\n  }\n});\n\nexport default {\n  name: 'CvDatePicker',\n  mixins: [uidMixin, themeMixin, carbonPrefixMixin],\n  components: { Calendar16, CvWrapper },\n  props: {\n    dateLabel: { type: String, default: undefined },\n    dateEndLabel: { type: String, default: undefined },\n    formItem: { type: Boolean, default: true },\n    kind: {\n      type: String,\n      default: 'simple',\n      validator: val => ['short', 'simple', 'single', 'range'].includes(val),\n    },\n    calOptions: {\n      type: Object,\n      default: () => {\n        return {\n          dateFormat: 'm/d/Y',\n        };\n      },\n    },\n    pattern: { type: String, default: '\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}' },\n    placeholder: { type: String, default: 'mm/dd/yyyy' },\n    invalid: /* deprecate */ {\n      type: Boolean,\n      default: undefined,\n      validator(val) {\n        if (val !== undefined && process.env.NODE_ENV === 'development') {\n          console.warn('CvDatePicker: invalid prop deprecated in favour of invalidMessage');\n        }\n        return true;\n      },\n    },\n    invalidDateMessage: /* deprecate */ {\n      type: String,\n      default: undefined,\n      validator(val) {\n        if (val !== undefined && process.env.NODE_ENV === 'development') {\n          console.warn('CvDatePicker: invalidDateMessage deprecated in favour of invalidMessage');\n        }\n        return true;\n      },\n    },\n    invalidMessage: { type: String, default: undefined },\n    value: [String, Object, Array, Date],\n  },\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  data() {\n    return {\n      dataValue: this.value,\n      dataOptions: {},\n      isInvalid: false,\n    };\n  },\n  watch: {\n    value() {\n      if (this.isSingle) {\n        this.cal.setDate(this.value, true);\n      } else if (this.isRange) {\n        this.cal.setDate([this.value.startDate, this.value.endDate], true);\n      } else {\n        this.$refs.date.value = this.value;\n      }\n      this.dataValue = this.value;\n    },\n    calOptions() {\n      this.initFlatpickr();\n    },\n    kind() {\n      this.initFlatpickr();\n    },\n    invalidMessage() {\n      this.checkSlots();\n    },\n  },\n  computed: {\n    getDateLabel() {\n      if (this.dateLabel !== undefined) {\n        return this.dateLabel;\n      } else {\n        if (this.isRange) {\n          return 'Start date';\n        } else {\n          return 'Date';\n        }\n      }\n    },\n    getDateEndLabel() {\n      if (this.dateEndLabel !== undefined) {\n        return this.dateEndLabel;\n      } else {\n        if (this.isRange) {\n          return 'End date';\n        } else {\n          return '';\n        }\n      }\n    },\n    isRange() {\n      return this.kind === 'range';\n    },\n    isSingle() {\n      return this.kind === 'single';\n    },\n  },\n  methods: {\n    checkSlots() {\n      // NOTE: this.$slots is not reactive so needs to be managed on updated\n      this.isInvalid = !!(\n        this.$slots['invalid-message'] ||\n        (this.invalidMessage && this.invalidMessage.length) ||\n        (this.invalidDateMessage && this.invalidDateMessage.length)\n      );\n    },\n    initFlatpickr() {\n      if (['single', 'range'].includes(this.kind)) {\n        // no need to call set value as it's done through getOptions\n        this.cal = new Flatpickr(this.$refs.date, this.getOptions());\n      }\n    },\n    getOptions() {\n      const _options = { ...this.calOptions };\n\n      // add events update based on parameters\n      _options.onChange = this.onChange;\n      _options.onOpen = this.onOpen;\n      _options.onReady = this.onCalReady;\n\n      // prefer value if set\n      if (this.dataValue) {\n        if (this.isRange) {\n          _options.defaultDate = [this.dataValue.startDate, this.dataValue.endDate];\n        } else {\n          _options.defaultDate = this.dataValue;\n        }\n      }\n      // _options.onValueUpdate = this.onChange;\n\n      _options.plugins = [\n        this.isRange\n          ? carbonFlatpickrRangePlugin({\n              input: this.$refs.todate,\n            })\n          : () => {},\n        carbonFlatpickrMonthSelectPlugin({\n          selectorFlatpickrMonthYearContainer: '.flatpickr-current-month',\n          selectorFlatpickrYearContainer: '.numInputWrapper',\n          selectorFlatpickrCurrentMonth: '.cur-month',\n          classFlatpickrCurrentMonth: 'cur-month',\n        }),\n        carbonFlatpickrFixEventsPlugin({\n          inputFrom: this.$refs.date,\n          inputTo: this.$refs.todate,\n        }),\n      ];\n      _options.nextArrow = `\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n        <polygon points=\"11,8 6,13 5.3,12.3 9.6,8 5.3,3.7 6,3 \"/>\n        <rect width=\"16\" height=\"16\" style=\"fill:none\" />\n      </svg>`;\n      _options.prevArrow = `\n      <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\">\n        <polygon points=\"5,8 10,3 10.7,3.7 6.4,8 10.7,12.3 10,13 \"/>\n        <rect width=\"16\" height=\"16\" style=\"fill:none\" />\n      </svg>`;\n\n      return _options;\n    },\n    onChange() {\n      let firstDate, secondDate;\n      let dateToString = val => {\n        if (typeof val === 'number') {\n          return this.cal.formatDate(val, this.calOptions.dateFormat);\n        } else {\n          return val || '';\n        }\n      };\n\n      if (this.dataValue) {\n        if (this.isRange) {\n          firstDate = dateToString(this.dataValue.startDate);\n          secondDate = dateToString(this.dataValue.endDate);\n        } else {\n          firstDate = dateToString(this.dataValue);\n        }\n      }\n\n      if (this.isRange) {\n        if (firstDate !== this.$refs.date.value || secondDate !== this.$refs.todate.value) {\n          this.dataValue = {\n            startDate: this.$refs.date.value,\n            endDate: this.$refs.todate.value,\n          };\n          this.$emit('change', this.dataValue);\n        }\n      } else {\n        if (firstDate !== this.$refs.date.value) {\n          this.dataValue = this.$refs.date.value;\n          this.$emit('change', this.dataValue);\n\n          if (this.$listeners['simpleChange'] && process.env.NODE_ENV === 'development') {\n            console.warn('CvDatePicker: simple change event deprecated in favour of change.');\n            this.$emit('simpleChange', this.dataValue);\n          }\n        }\n      }\n    },\n    onCalReady(selectedDates, dateString, instance) {\n      const calendarContainer = instance.calendarContainer;\n      const options = {\n        classCalendarContainer: `${this.carbonPrefix}--date-picker__calendar`,\n        classMonth: `${this.carbonPrefix}--date-picker__month`,\n        classWeekdays: `${this.carbonPrefix}--date-picker__weekdays`,\n        classDays: `${this.carbonPrefix}--date-picker__days`,\n        classWeekday: `${this.carbonPrefix}--date-picker__weekday`,\n        classDay: `${this.carbonPrefix}--date-picker__day`,\n        classFocused: `${this.carbonPrefix}--focused`,\n        classVisuallyHidden: `${this.carbonPrefix}--visually-hidden`,\n      };\n\n      if (calendarContainer) {\n        calendarContainer.classList.add(options.classCalendarContainer);\n        calendarContainer.querySelector('.flatpickr-month').classList.add(options.classMonth);\n        calendarContainer.querySelector('.flatpickr-weekdays').classList.add(options.classWeekdays);\n        calendarContainer.querySelector('.flatpickr-days').classList.add(options.classDays);\n        for (const item of calendarContainer.querySelectorAll('.flatpickr-weekday')) {\n          const currentItem = item;\n          currentItem.innerHTML = currentItem.innerHTML.replace(/\\s+/g, '');\n          currentItem.classList.add(options.classWeekday);\n        }\n        for (const item of calendarContainer.querySelectorAll('.flatpickr-day')) {\n          item.classList.add(options.classDay);\n          if (item.classList.contains('today') && selectedDates.length > 0) {\n            item.classList.add('no-border');\n          } else if (item.classList.contains('today') && selectedDates.length === 0) {\n            item.classList.remove('no-border');\n          }\n        }\n      }\n    },\n    openTodateCal() {\n      this.$refs.todate.click();\n    },\n  },\n  mounted() {\n    this.initFlatpickr();\n    this.checkSlots();\n    // this.cal.setDate([Date.now(), Date.now()]);\n    // setTimeout(() => {\n    //   let curDate = new Date();\n    //   let anotherDate = new Date();\n    //   anotherDate = anotherDate.setDate(anotherDate.getDate() + 16);\n    //   this.cal.setDate([curDate, anotherDate], true);\n    // }, 2000);\n  },\n  updated() {\n    this.checkSlots();\n  },\n  beforeDestroy() {\n    if (this.cal) {\n      this.cal.destroy();\n    }\n  },\n};\n</script>\n"]}]}