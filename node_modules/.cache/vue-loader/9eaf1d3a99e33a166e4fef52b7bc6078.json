{"remainingRequest":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-data-table/cv-data-table.vue?vue&type=template&id=26f48b1f&","dependencies":[{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-data-table/cv-data-table.vue","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}