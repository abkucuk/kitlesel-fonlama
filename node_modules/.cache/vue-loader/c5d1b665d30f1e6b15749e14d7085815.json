{"remainingRequest":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/@carbon/vue/src/components/cv-file-uploader/cv-file-uploader.vue","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHVpZE1peGluLCBjYXJib25QcmVmaXhNaXhpbiwgbWV0aG9kc01peGluIH0gZnJvbSAnLi4vLi4vbWl4aW5zJzsKaW1wb3J0IEN2Rm9ybUl0ZW0gZnJvbSAnLi4vY3YtZm9ybS9jdi1mb3JtLWl0ZW0nOwppbXBvcnQgQ2hlY2ttYXJrRmlsbGVkMTYgZnJvbSAnQGNhcmJvbi9pY29ucy12dWUvZXMvY2hlY2ttYXJrLS1maWxsZWQvMTYnOwppbXBvcnQgV2FybmluZ0ZpbGxlZDE2IGZyb20gJ0BjYXJib24vaWNvbnMtdnVlL2VzL3dhcm5pbmctLWZpbGxlZC8xNic7CmltcG9ydCBDbG9zZTE2IGZyb20gJ0BjYXJib24vaWNvbnMtdnVlL2VzL2Nsb3NlLzE2JzsKaW1wb3J0IEN2V3JhcHBlciBmcm9tICcuLi9jdi13cmFwcGVyL19jdi13cmFwcGVyJzsKaW1wb3J0IHsgU1RBVEVTLCBLSU5EUyB9IGZyb20gJy4vY29uc3RzLmpzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3ZGaWxlVXBsb2FkZXInLAogIGNvbXBvbmVudHM6IHsgQ3ZGb3JtSXRlbSwgQ2hlY2ttYXJrRmlsbGVkMTYsIFdhcm5pbmdGaWxsZWQxNiwgQ2xvc2UxNiwgQ3ZXcmFwcGVyIH0sCiAgbWl4aW5zOiBbdWlkTWl4aW4sIGNhcmJvblByZWZpeE1peGluLCBtZXRob2RzTWl4aW4oeyBmb2N1c1RhcmdldDogWydibHVyJywgJ2ZvY3VzJ10gfSldLAogIGluaGVyaXRBdHRyczogZmFsc2UsCiAgcHJvcHM6IHsKICAgIGNsZWFyT25SZXNlbGVjdDogQm9vbGVhbiwKICAgIGZpbGVzOiBBcnJheSwKICAgIGtpbmQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZHJhZy10YXJnZXQnLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiB7CiAgICAgICAgY29uc3QgdmFsaWRWYWx1ZXMgPSBPYmplY3QudmFsdWVzKEtJTkRTKTsKCiAgICAgICAgaWYgKCF2YWxpZFZhbHVlcy5pbmNsdWRlcyh2YWwpKSB7CiAgICAgICAgICBjb25zb2xlLndhcm4oYEN2RmlsZVVwbG9hZGVyOiB2YWxpZCB2YWx1ZXMgZm9yICdraW5kJyBhcmUgJHt2YWxpZFZhbHVlc31gKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0sCiAgICB9LAogICAgbGFiZWw6IFN0cmluZywKICAgIGhlbHBlclRleHQ6IFN0cmluZywKICAgIGluaXRpYWxTdGF0ZVVwbG9hZGluZzogQm9vbGVhbiwKICAgIHJlbW92YWJsZTogQm9vbGVhbiwKICAgIGJ1dHRvbkxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiB7CiAgICAgICAgaWYgKHZhbCAhPT0gdW5kZWZpbmVkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7CiAgICAgICAgICBjb25zb2xlLndhcm4oJ0N2RmlsZVVwbG9hZGVyOiBidXR0b24tbGFiZWwgcHJvcCBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBkcm9wLXRhcmdldC1sYWJlbCcpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSwKICAgIH0sCiAgICBkcm9wVGFyZ2V0TGFiZWw6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiB1bmRlZmluZWQgfSwKICAgIHJlbW92ZUFyaWFMYWJlbDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdSZW1vdmUgc2VsZWN0ZWQgZmlsZScgfSwKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAnZmlsZXMnLAogICAgZXZlbnQ6ICdjaGFuZ2UnLAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuU1RBVEVTID0gT2JqZWN0LmZyZWV6ZShTVEFURVMpOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGludGVybmFsRmlsZXM6IFtdLAogICAgICBhbGxvd0Ryb3A6IGZhbHNlLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmludGVybmFsRmlsZXMgPSB0aGlzLmZpbGVzID8gdGhpcy5maWxlcyA6IFtdOwogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbGVzKCkgewogICAgICB0aGlzLmludGVybmFsRmlsZXMgPSB0aGlzLmZpbGVzID8gdGhpcy5maWxlcyA6IFtdOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyBCaW5kIGxpc3RlbmVycyBhdCB0aGUgY29tcG9uZW50IGxldmVsIHRvIHRoZSBlbWJlZGRlZCBpbnB1dCBlbGVtZW50IGFuZAogICAgLy8gYWRkIG91ciBvd24gaW5wdXQgbGlzdGVuZXIgdG8gc2VydmljZSB0aGUgdi1tb2RlbC4gU2VlOgogICAgLy8gaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvY29tcG9uZW50cy1jdXN0b20tZXZlbnRzLmh0bWwjQ3VzdG9taXppbmctQ29tcG9uZW50LXYtbW9kZWwKICAgIGlucHV0TGlzdGVuZXJzKCkgewogICAgICByZXR1cm4gewogICAgICAgIC4uLnRoaXMuJGxpc3RlbmVycywKICAgICAgICBjaGFuZ2U6IGV2ZW50ID0+IHRoaXMub25DaGFuZ2UoZXZlbnQpLAogICAgICB9OwogICAgfSwKICAgIGlzSW52YWxpZCgpIHsKICAgICAgcmV0dXJuIGluZGV4ID0+IHsKICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmludGVybmFsRmlsZXNbaW5kZXhdLmludmFsaWRNZXNzYWdlICYmIHRoaXMuaW50ZXJuYWxGaWxlc1tpbmRleF0uaW52YWxpZE1lc3NhZ2UubGVuZ3RoOwogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH07CiAgICB9LAogICAgaW50ZXJuYWxEcm9wVGFyZ2V0TGFiZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmRyb3BUYXJnZXRMYWJlbCB8fCB0aGlzLmJ1dHRvbkxhYmVsIHx8ICdEcmFnIGFuZCBkcm9wIGZpbGVzIGhlcmUgb3IgdXBsb2FkJzsKICAgIH0sCiAgICBzdGF0ZVN0eWxlT3ZlcmlkZXMoKSB7CiAgICAgIC8vIDxzdHlsZSBjYXJib24gdHdlYWtzIC0gRE8gTk9UIFVTRSBTVFlMRSBUQUcgYXMgaXQgY2F1c2VzIFNTUiBpc3N1ZXMKICAgICAgcmV0dXJuIHsgZGlzcGxheTogJ2lubGluZS1mbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfTsKICAgIH0sCiAgICBhbGxvd0Ryb3BDbGFzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuYWxsb3dEcm9wID8gYCAke3RoaXMuY2FyYm9uUHJlZml4fS0tZmlsZV9fZHJvcC1jb250YWluZXItLWRyYWctb3ZlcmAgOiAnJzsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICByZW1vdmUoaW5kZXgpIHsKICAgICAgdGhpcy5pbnRlcm5hbEZpbGVzLnNwbGljZShpbmRleCwgMSk7CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuaW50ZXJuYWxGaWxlcyk7CiAgICB9LAogICAgYWRkRmlsZXMoZmlsZXMpIHsKICAgICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICAgICAgdGhpcy5pbnRlcm5hbEZpbGVzLnB1c2goewogICAgICAgICAgc3RhdGU6IHRoaXMuaW5pdGlhbFN0YXRlVXBsb2FkaW5nID8gU1RBVEVTLlVQTE9BRElORyA6IFNUQVRFUy5OT05FLAogICAgICAgICAgZmlsZSwKICAgICAgICAgIGludmFsaWRNZXNzYWdlVGl0bGU6ICcnLAogICAgICAgICAgaW52YWxpZE1lc3NhZ2U6ICcnLAogICAgICAgIH0pOwogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuaW50ZXJuYWxGaWxlcyk7CiAgICB9LAogICAgb25DaGFuZ2UoZXYpIHsKICAgICAgaWYgKGV2LnRhcmdldC5maWxlcy5sZW5ndGggIT09IDAgJiYgdGhpcy5jbGVhck9uUmVzZWxlY3QpIHsKICAgICAgICB0aGlzLmludGVybmFsRmlsZXMgPSBbXTsKICAgICAgfQogICAgICB0aGlzLmFkZEZpbGVzKGV2LnRhcmdldC5maWxlcyk7CiAgICB9LAogICAgb25TaG93KCkgewogICAgICB0aGlzLiRyZWZzWydmaWxlLWlucHV0J10uY2xpY2soKTsKICAgIH0sCiAgICBzZXRTdGF0ZShpbmRleCwgc3RhdGUpIHsKICAgICAgaWYgKFsndXBsb2FkaW5nJywgJ2NvbXBsZXRlJywgJyddLmluY2x1ZGVzKHN0YXRlKSkgewogICAgICAgIHRoaXMuaW50ZXJuYWxGaWxlc1tpbmRleF0uc3RhdGUgPSBzdGF0ZTsKICAgICAgfQogICAgfSwKICAgIGNsZWFyKCkgewogICAgICB0aGlzLmludGVybmFsRmlsZXMgPSBbXTsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5pbnRlcm5hbEZpbGVzKTsKICAgIH0sCiAgICBzZXRJbnZhbGlkTWVzc2FnZShpbmRleCwgbWVzc2FnZSkgewogICAgICB0aGlzLmludGVybmFsRmlsZXNbaW5kZXhdLmludmFsaWRNZXNzYWdlID0gbWVzc2FnZTsKICAgIH0sCiAgICBvbkRyYWdFdmVudChldnQpIHsKICAgICAgLy8gTk9URTogVmFsaWRhdGlvbiBvZiBkcmFnZ2VkIGZpbGVzIGlzIG5vdCBjdXJyZW50bHkgZG9uZS4KICAgICAgLy8gSXQgbWF5IGJlIHBvc3NpYmxlIHRvIGRvIHRoaXMgaGVyZSBvciBkZWZlciB0byB0aGUgY2FsbGVyLgogICAgICAvLyBJdCBpcyBjZXJ0YWlubHkgcG9zc2libGUgZm9yIHRoZSB1c2VyIHRvIHJlbW92ZSBmaWxlcyBhZnRlciB0aGV5IGFyZSBkcm9wcGVkLgoKICAgICAgaWYgKEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoZXZ0LmRhdGFUcmFuc2Zlci50eXBlcywgJ0ZpbGVzJykgPj0gMCkgewogICAgICAgIGlmIChldnQudHlwZSA9PT0gJ2RyYWdvdmVyJykgewogICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICBjb25zdCBkcm9wRWZmZWN0ID0gJ2NvcHknOwogICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZXZ0LmRhdGFUcmFuc2Zlci50eXBlcykpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAvLyBJRTExIHRocm93cyBhICJwZXJtaXNzaW9uIGRlbmllZCIgZXJyb3IgYWNjZXNzaW5nIGAuZWZmZWN0QWxsb3dlZGAKICAgICAgICAgICAgICBldnQuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSBkcm9wRWZmZWN0OwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgLy8gaWdub3JlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGV2dC5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9IGRyb3BFZmZlY3Q7CiAgICAgICAgICB0aGlzLmFsbG93RHJvcCA9IHRydWU7CiAgICAgICAgfQogICAgICAgIGlmIChldnQudHlwZSA9PT0gJ2RyYWdsZWF2ZScpIHsKICAgICAgICAgIHRoaXMuYWxsb3dEcm9wID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmIChldnQudHlwZSA9PT0gJ2Ryb3AnKSB7CiAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIHRoaXMuYWRkRmlsZXMoZXZ0LmRhdGFUcmFuc2Zlci5maWxlcyk7CiAgICAgICAgICB0aGlzLmFsbG93RHJvcCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["cv-file-uploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"cv-file-uploader.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-file-uploader","sourcesContent":["<template>\n  <cv-form-item class=\"cv-file-uploader\">\n    <strong :class=\"`${carbonPrefix}--file--label`\">{{ label }}</strong>\n    <p :class=\"`${carbonPrefix}--label-description`\">{{ helperText }}</p>\n    <div :class=\"`${carbonPrefix}--file`\" data-file>\n      <label\n        :for=\"uid\"\n        :class=\"[\n          {\n            [`${carbonPrefix}--file-browse-btn`]: kind !== 'button',\n            [`${carbonPrefix}--btn`]: kind === 'button',\n            [`${carbonPrefix}--btn--primary`]: kind === 'button',\n          },\n        ]\"\n        role=\"button\"\n        tabindex=\"0\"\n        ref=\"focusTarget\"\n        @keydown.enter.prevent=\"onShow()\"\n        @keydown.space.prevent\n        @keyup.space.prevent=\"onShow()\"\n      >\n        <cv-wrapper\n          :tag-type=\"kind !== 'button' ? 'div' : ''\"\n          data-file-drop-container\n          :class=\"`${carbonPrefix}--file__drop-container${allowDropClass}`\"\n          @dragover=\"onDragEvent\"\n          @dragleave=\"onDragEvent\"\n          @drop=\"onDragEvent\"\n        >\n          <slot name=\"drop-target\">{{ internalDropTargetLabel }}</slot>\n          <input\n            v-if=\"kind !== 'button'\"\n            v-bind=\"$attrs\"\n            type=\"file\"\n            :class=\"`${carbonPrefix}--file-input`\"\n            :id=\"uid\"\n            data-file-uploader\n            data-target=\"[data-file-container]\"\n            v-on=\"inputListeners\"\n            ref=\"file-input\"\n          />\n        </cv-wrapper>\n      </label>\n      <input\n        v-if=\"kind === 'button'\"\n        v-bind=\"$attrs\"\n        type=\"file\"\n        :class=\"`${carbonPrefix}--file-input`\"\n        :id=\"uid\"\n        data-file-uploader\n        data-target=\"[data-file-container]\"\n        v-on=\"inputListeners\"\n        ref=\"file-input\"\n      />\n\n      <div data-file-container :class=\"`${carbonPrefix}--file-container`\">\n        <div\n          v-for=\"(file, index) in internalFiles\"\n          :key=\"index\"\n          :class=\"\n            isInvalid(index)\n              ? `${carbonPrefix}--file__selected-file--invalid__wrapper`\n              : `${carbonPrefix}--file__selected-file`\n          \"\n        >\n          <cv-wrapper\n            :tag-type=\"isInvalid(index) ? 'div' : ''\"\n            :class=\"`${carbonPrefix}--file__selected-file ${carbonPrefix}--file__selected-file--invalid`\"\n          >\n            <p :class=\"`${carbonPrefix}--file-filename`\">{{ file.file.name }}</p>\n\n            <span\n              :data-for=\"uid\"\n              :class=\"`${carbonPrefix}--file__state-container`\"\n              :data-test=\"file.state\"\n              :style=\"stateStyleOverides\"\n            >\n              <div v-if=\"file.state === 'uploading'\" :class=\"`${carbonPrefix}--inline-loading__animation`\">\n                <div data-inline-loading-spinner :class=\"`${carbonPrefix}--loading ${carbonPrefix}--loading--small`\">\n                  <svg :class=\"`${carbonPrefix}--loading__svg`\" viewBox=\"-75 -75 150 150\">\n                    <circle :class=\"`${carbonPrefix}--loading__background`\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n                    <circle :class=\"`${carbonPrefix}--loading__stroke`\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n                  </svg>\n                </div>\n              </div>\n              <CheckmarkFilled16 v-if=\"file.state === 'complete'\" :class=\"`${carbonPrefix}--file-complete`\" />\n              <WarningFilled16 v-if=\"isInvalid(index)\" :class=\"`${carbonPrefix}--file--invalid`\" />\n              <button\n                type=\"button\"\n                :class=\"`${carbonPrefix}--file-close`\"\n                v-if=\"removable\"\n                :alt=\"removeAriaLabel\"\n                :arial-label=\"removeAriaLabel\"\n                @click=\"remove(index)\"\n              >\n                <Close16 />\n              </button>\n            </span>\n            <div v-if=\"isInvalid(index)\" :class=\"`${carbonPrefix}--form-requirement`\">\n              <div :class=\"`${carbonPrefix}--form-requirement__title`\">\n                {{ file.invalidMessageTitle || 'Invalid file' }}\n              </div>\n              <p :class=\"`${carbonPrefix}--form-requirement__supplement`\">{{ file.invalidMessage }}</p>\n            </div>\n          </cv-wrapper>\n        </div>\n      </div>\n    </div>\n  </cv-form-item>\n</template>\n\n<script>\nimport { uidMixin, carbonPrefixMixin, methodsMixin } from '../../mixins';\nimport CvFormItem from '../cv-form/cv-form-item';\nimport CheckmarkFilled16 from '@carbon/icons-vue/es/checkmark--filled/16';\nimport WarningFilled16 from '@carbon/icons-vue/es/warning--filled/16';\nimport Close16 from '@carbon/icons-vue/es/close/16';\nimport CvWrapper from '../cv-wrapper/_cv-wrapper';\nimport { STATES, KINDS } from './consts.js';\n\nexport default {\n  name: 'CvFileUploader',\n  components: { CvFormItem, CheckmarkFilled16, WarningFilled16, Close16, CvWrapper },\n  mixins: [uidMixin, carbonPrefixMixin, methodsMixin({ focusTarget: ['blur', 'focus'] })],\n  inheritAttrs: false,\n  props: {\n    clearOnReselect: Boolean,\n    files: Array,\n    kind: {\n      type: String,\n      default: 'drag-target',\n      validator: val => {\n        const validValues = Object.values(KINDS);\n\n        if (!validValues.includes(val)) {\n          console.warn(`CvFileUploader: valid values for 'kind' are ${validValues}`);\n        }\n        return true;\n      },\n    },\n    label: String,\n    helperText: String,\n    initialStateUploading: Boolean,\n    removable: Boolean,\n    buttonLabel: {\n      type: String,\n      default: undefined,\n      validator: val => {\n        if (val !== undefined && process.env.NODE_ENV === 'development') {\n          console.warn('CvFileUploader: button-label prop deprecated in favour of drop-target-label');\n        }\n        return true;\n      },\n    },\n    dropTargetLabel: { type: String, default: undefined },\n    removeAriaLabel: { type: String, default: 'Remove selected file' },\n  },\n  model: {\n    prop: 'files',\n    event: 'change',\n  },\n  created() {\n    this.STATES = Object.freeze(STATES);\n  },\n  data() {\n    return {\n      internalFiles: [],\n      allowDrop: false,\n    };\n  },\n  mounted() {\n    this.internalFiles = this.files ? this.files : [];\n  },\n  watch: {\n    files() {\n      this.internalFiles = this.files ? this.files : [];\n    },\n  },\n  computed: {\n    // Bind listeners at the component level to the embedded input element and\n    // add our own input listener to service the v-model. See:\n    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model\n    inputListeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.onChange(event),\n      };\n    },\n    isInvalid() {\n      return index => {\n        const result = this.internalFiles[index].invalidMessage && this.internalFiles[index].invalidMessage.length;\n        return result;\n      };\n    },\n    internalDropTargetLabel() {\n      return this.dropTargetLabel || this.buttonLabel || 'Drag and drop files here or upload';\n    },\n    stateStyleOverides() {\n      // <style carbon tweaks - DO NOT USE STYLE TAG as it causes SSR issues\n      return { display: 'inline-flex', alignItems: 'center' };\n    },\n    allowDropClass() {\n      return this.allowDrop ? ` ${this.carbonPrefix}--file__drop-container--drag-over` : '';\n    },\n  },\n  methods: {\n    remove(index) {\n      this.internalFiles.splice(index, 1);\n      this.$emit('change', this.internalFiles);\n    },\n    addFiles(files) {\n      for (const file of files) {\n        this.internalFiles.push({\n          state: this.initialStateUploading ? STATES.UPLOADING : STATES.NONE,\n          file,\n          invalidMessageTitle: '',\n          invalidMessage: '',\n        });\n      }\n      this.$emit('change', this.internalFiles);\n    },\n    onChange(ev) {\n      if (ev.target.files.length !== 0 && this.clearOnReselect) {\n        this.internalFiles = [];\n      }\n      this.addFiles(ev.target.files);\n    },\n    onShow() {\n      this.$refs['file-input'].click();\n    },\n    setState(index, state) {\n      if (['uploading', 'complete', ''].includes(state)) {\n        this.internalFiles[index].state = state;\n      }\n    },\n    clear() {\n      this.internalFiles = [];\n      this.$emit('change', this.internalFiles);\n    },\n    setInvalidMessage(index, message) {\n      this.internalFiles[index].invalidMessage = message;\n    },\n    onDragEvent(evt) {\n      // NOTE: Validation of dragged files is not currently done.\n      // It may be possible to do this here or defer to the caller.\n      // It is certainly possible for the user to remove files after they are dropped.\n\n      if (Array.prototype.indexOf.call(evt.dataTransfer.types, 'Files') >= 0) {\n        if (evt.type === 'dragover') {\n          evt.preventDefault();\n          const dropEffect = 'copy';\n          if (Array.isArray(evt.dataTransfer.types)) {\n            try {\n              // IE11 throws a \"permission denied\" error accessing `.effectAllowed`\n              evt.dataTransfer.effectAllowed = dropEffect;\n            } catch (e) {\n              // ignore\n            }\n          }\n          evt.dataTransfer.dropEffect = dropEffect;\n          this.allowDrop = true;\n        }\n        if (evt.type === 'dragleave') {\n          this.allowDrop = false;\n        }\n        if (evt.type === 'drop') {\n          evt.preventDefault();\n          this.addFiles(evt.dataTransfer.files);\n          this.allowDrop = false;\n        }\n      }\n    },\n  },\n};\n</script>\n"]}]}