{"remainingRequest":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/src/components/HelloWorld.vue","mtime":1618008928943},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abkucukmbp/fintech-kitlesel-fonlama/kitlesel-fonlama/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      filterValue: \"\",\n      rowSize: \"\",\n      autoWidth: false,\n      sortable: false,\n      title: \"Countries\",\n      columns: [\"Name\", \"Capital\", \"Region\", \"Flag\"],\n      jsonData: null,\n      use_actions: true,\n      use_batchActions: true,\n    };\n  },\n  methods: {\n    onFilter(val) {\n      console.log(`onfilter methoduna gelen val : ${val}`);\n      this.filterValue = val;\n    },\n    onSort(sortBy) {\n      if (sortBy) {\n        this.internalData.sort((a, b) => {\n          const itemA = a[sortBy.index];\n          const itemB = b[sortBy.index];\n\n          if (sortBy.order === \"descending\") {\n            if (sortBy.index === 2) {\n              // sort as number\n              return parseFloat(itemA) - parseFloat(itemB);\n            } else {\n              return itemB.localeCompare(itemA);\n            }\n          }\n          if (sortBy.order === \"ascending\") {\n            if (sortBy.index === 2) {\n              // sort as number\n              return parseFloat(itemB) - parseFloat(itemA);\n            } else {\n              return itemA.localeCompare(itemB);\n            }\n          }\n          return 0;\n        });\n      }\n    },\n  },\n  mounted() {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(\n      (response) =>\n        (this.jsonData = response.data.map(\n          ({ name, capital, region, flag }) => ({\n            name,\n            capital,\n            region,\n            flag,\n          })\n        ))\n    );\n  },\n  watch: {},\n  computed: {\n    filteredData: function () {\n      let newData;\n      if (this.filterValue) {\n        const regex = new RegExp(this.filterValue, \"i\");\n        newData = this.jsonData.filter((item) => {\n          //console.log('object.values item')\n          //console.log(Object.values(item).filter((st) => {return st.search(regex) >= 0}).length > 0 ? true : false)\n          return Object.values(item).filter((st) => {\n            return st.search(regex) >= 0;\n          }).length > 0\n            ? true\n            : false;\n        });\n        console.log(newData);\n      } else {\n        newData = this.jsonData;\n      }\n      if (this.pageStart) {\n        return newData.slice(this.pageStart, this.pageStart + this.pageLength);\n      } else {\n        return newData;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"hello\">\n    <cv-data-table\n      :sortable=\"sortable\"\n      :columns=\"columns\"\n      searchLabel=\"Filter\"\n      searchPlaceholder=\"Filter\"\n      searchClearLabel=\"Clear filter\"\n      :data=\"filteredData\"\n      @search=\"onFilter\"\n      @sort=\"onSort\"\n      ref=\"table\"\n    >\n    <template slot=\"data\">\n       <cv-data-table-row\n          v-for=\"(row, rowIndex) in filteredData\"\n          :key=\"`${rowIndex}`\"\n          :value=\"`${rowIndex}`\"\n        >\n         <cv-data-table-cell>\n            <p>{{row.name}}</p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <p>{{row.capital}}</p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <p>{{row.region}}</p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <img :src=\"row.flag\" style=\"height: 50px; width:50px\" />\n          </cv-data-table-cell>\n        </cv-data-table-row>\n    </template>\n    </cv-data-table>\n    <!-- <cv-data-table :columns=\"columns\"  >\n      <template slot=\"data\">\n        <cv-data-table-row\n          v-for=\"(row, rowIndex) in `${this.filteredData}`\"\n          :key=\"`${rowIndex}`\"\n          :value=\"`${rowIndex}`\"\n        >\n          <cv-data-table-cell>\n            <p>sdfasdf</p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <p></p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <p></p>\n          </cv-data-table-cell>\n          <cv-data-table-cell>\n            <p></p>\n          </cv-data-table-cell>\n         \n        </cv-data-table-row>\n      </template>\n    </cv-data-table> -->\n  </div>\n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}