/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.
 */
'use strict';

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-6f7ad55f.js');
var iconHelpers = require('@carbon/icon-helpers');

var _20 = {
  name: 'Awake20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var _objectSpread2;

    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2((_objectSpread2 = {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      width: "20",
      height: "20",
      preserveAspectRatio: 'xMidYMid meet'
    }, _rollupPluginBabelHelpers._defineProperty(_objectSpread2, "xmlns", 'http://www.w3.org/2000/svg'), _rollupPluginBabelHelpers._defineProperty(_objectSpread2, "title", props.title), _objectSpread2), data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2(_rollupPluginBabelHelpers._objectSpread2({}, data.staticStyle), data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M15 2H17V6.96H15z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M21.67 6.85H26.630000000000003V8.85H21.67z",
        "transform": "rotate(-45 24.142 7.85)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M25.04 15H30V17H25.04z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M23.15 21.67H25.15V26.630000000000003H23.15z",
        "transform": "rotate(-45 24.152 24.146)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M15 25.04H17V30H15z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M5.37 23.15H10.33V25.15H5.37z",
        "transform": "rotate(-45 7.86 24.144)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M2 15H6.96V17H2z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M6.85 5.37H8.85V10.33H6.85z",
        "transform": "rotate(-45 7.85 7.848)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M16,12a4,4,0,1,1-4,4,4,4,0,0,1,4-4m0-2a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z"
      }
    }), children]);
  }
};

module.exports = _20;
